// all this can come out of the app
$CLASSES: ("ibis:Issue", "ibis:Position", "ibis:Argument", "skos:Concept");
$PROPERTIES: (
    //"dct:references",
    "skos:broader", "skos:narrower", "skos:related",
    "ibis:generalizes", "ibis:specializes",
    "ibis:suggests", "ibis:suggested-by",
    "ibis:questions", "ibis:questioned-by",
    "ibis:response", "ibis:responds-to",
    "ibis:supports", "ibis:supported-by",
    "ibis:opposes", "ibis:opposed-by",
    "ibis:concerns", "ibis:concern-of"
);

$BOUNDARIES: (
    "ibis:concerns", "ibis:concern-of", "dct:references", "dct:isReferencedBy");

$FADE: (
    "ibis:Issue":    (("skos:Concept"), $BOUNDARIES),
    "ibis:Position": (("skos:Concept"), $BOUNDARIES),
    "ibis:Argument": (("skos:Concept"), $BOUNDARIES),
    "skos:Concept":  (
        ("ibis:Issue", "ibis:Position", "ibis:Argument"), $BOUNDARIES)
);

$FIELDSETS: ("ibis:Issue": issue, "ibis:Position": position,
             "ibis:Argument": argument, "skos:Concept": concept);

$PREFIXES: (
    ibis: "https://vocab.methodandstructure.com/ibis#",
    skos: "http://www.w3.org/2004/02/skos/core#"
);

// S,L: 45,5; 45,15; 45,30; 45,40; 45,70; 60,90; 100,50; 100,90
$PALETTE: (
    // hue 12
    "ibis:Issue":         (#210909, #401919, #733232, #974444,
                           #d79c9c, #f4dddd, #ef0006, #ffd9d9),
    // hue 127
    "ibis:Position":      (#091309, #182919, #314d31, #436643,
                           #7db97d, #a6f4a7, #008a06, #71fe73),
    // hue 265
    "ibis:Argument":      (#0d0d27, #20204b, #3e3e85, #5656a0,
                           #a7a7d2, #e0e0f3, #6261fe, #dfdffe),
    // hue 308
    "skos:Concept":       (#1a0b1a, #351c35, #613760, #804b7f,
                           #d198d1, #f3daf3, #d200d1, #ffd5fe),
    // hue 260
    "ibis:generalizes":   (#0c0f20, #1e2340, #3a4372, #4e5a96,
                           #a2a8d2, #dfe1f3, #376afe, #dce0fe),
    // hue 265
    "ibis:specializes":   (#0d0e26, #202149, #3d3f80, #5456a0,
                           #a6a7d2, #e0e0f3, #5b63fe, #dfe0fe),
    // hue 61
    "ibis:suggests":      (#141009, #2b2419, #504531, #6a5c43,
                           #bfa87d, #f4dfbd, #937200, #fedea1),
    // hue 55
    "ibis:suggested-by":  (#151009, #2c2419, #524431, #6d5b43,
                           #c5a67d, #f4dfc7, #9a6f00, #ffddb3),
    // hue 35
    "ibis:questions":     (#180e09, #322219, #5b4032, #785644,
                           #d89e7e, #f4ded4, #b26300, #ffdbca),
    // hue 27
    "ibis:questioned-by": (#1a0d09, #352019, #613d32, #805344,
                           #d89d8b, #f4ddd8, #c15700, #ffdad1),
    // hue 350
    "ibis:response":      (#1e0a11, #3c1a27, #6c3449, #8e4762,
                           #d59bae, #f4dce3, #e50081, #ffd8e4),
    // hue 356
    "ibis:responds-to":   (#1f0a10, #3d1a24, #6e3445, #90465c,
                           #d59ba9, #f4dce1, #e80071, #fed8e1),
    // hue 124
    "ibis:supports":      (#0a1309, #1a2918, #354c31, #476543,
                           #84b87d, #a9f59d, #2b8800, #78fe59),
    // hue 120
    "ibis:supported-by":  (#0b1209, #1c2818, #384b31, #4b6543,
                           #8bb67d, #acf591, #3e8700, #80fe26),
    // hue 9
    "ibis:opposes":       (#20090b, #40191c, #723237, #95454a,
                           #d69c9f, #f4ddde, #ed0035, #ffd9db),
    // hue 4
    "ibis:opposed-by":    (#20090d, #3f1a20, #70333d, #934552,
                           #d69ba3, #f4dcdf, #eb0054, #ffd9dd),
    // hue 268
    "skos:broader":       (#0f0d26, #232049, #4e4895, #5a54a0,
                           #a9a6d2, #e1e0f3, #6e5dfe, #e1dffe),
    // hue 266
    "skos:narrower":      (#110d25, #261f48, #524792, #5e53a0,
                           #aba6d2, #e2e0f3, #7859fe, #e2dffe),
    // hue 290
    "skos:related":       (#1f0a09, #3e1b19, #7f3f3b, #914944,
                           #d79c99, #f4dddc, #e32f00, #ffd9d8),
    // hue 105
    "ibis:concerns":      (#0e1209, #212718, #4b563a, #566243,
                           #9db27d, #cbee8e, #628100, #bdf500),
    // hue 110
    "ibis:concern-of":    (#0d1209, #202818, #3e4a31, #536343,
                           #98b37d, #c2f08e, #598300, #acf800)

);


@mixin vendor ($directive, $params...) {
   @each $p in webkit, moz, ms, o {
      -#{$p}-#{$directive}: $params;
   }
   #{$directive}: $params;
}

// this causes FOUC ???
//@import url("/asset/font-awesome.css");

* {
   border-color: inherit;
   transition: visibility 0.15s, opacity 0.15s, background-color 0.15s,
      border-color 0.15s, color 0.15s, fill 0.15s, stroke 0.15s;
}

html {
   width: 100%;
   min-height: 100%;
   //overflow: hidden;
   font-family: Roboto, Helvetica Neue, sans-serif;
   background-color: #333;
   color: #999;
}

body {
   width: 100%;
   height: 100%;
   border: 0;
   margin: 0;
   padding: 0;
   overflow: hidden;
}

body[typeof~="bibo:Webpage"] {
   overflow: auto;
   text-align: justify;
   hyphens: auto;
   color: #aaa;

   @for $i from 5 through 0 {
      h#{6 - $i} {
         font-size: 100% + $i * 20;
      }
   }

   h1 {
      text-align: center;
   }

   article {
      width: 100%;
      max-width: initial;
      right: initial;
      margin: 1em auto;
   }

   section {
      max-width: 70ex;
      margin: auto;
      line-height: 1.25em;
   }

   aside[role~="note"] {
      margin: 1.3333em;
      font-size: 75%;
   }

   em, strong, dfn, abbr, span {
      @include vendor(border-radius, 0.25em);
      &[about] {
         padding: 0 0.1em;
      }
   }
   dfn, abbr {
      //font-variant: small-caps;
      text-decoration: underline;
      text-decoration-style: dotted;
   }
}

main {
   position: absolute;
   overflow: hidden;
   width:100%;
   top: 0;
   left: 0;
   right: 0;
   bottom: 2em;
   padding: 0;
   margin: 0;
   @include vendor(box-shadow, inset 0px 0px 40px #000);
}

body[typeof~="ibis:Network"] {
    width: 100vw;
    height: 100vh;
    display: grid;
    grid-template-rows: auto 2em;
    > main {
        position: unset;
        grid-row: 1;
        //height: calc(100% - 2em);
        display: flex;
        flex-wrap: wrap;
        #force {
            // margin: auto;
            margin: 0;
            padding: 0;
            width: 100%;
            // flex: 0 0 100%;
            max-height: 66%;
            > svg {
                display: block;
                margin: auto;
                max-width: 100%;
                max-height: 100%;
                object-fit: contain;
            }
        }
    }
    > footer {
        position: unset;
        grid-row: 2;
    }
}

article {
   @include vendor(border-radius, 1em);
   display: inline-block;
   position: absolute;
   //margin: 1em 1em 1em 5%;
   margin: 1em 5% 1em 1em;
   padding: 0 1em;
   top: 0;
   left: 0;
   //right: 0;
   bottom: 0;
   width: 45%;
   max-width: 70ex;
   z-index: 2;
   overflow-x: visible;
   overflow-y: auto;
}

footer {
   position: absolute;
   left: 0;
   right: 0;
   bottom: 0;
   height: 1.5em;
   padding: 0.25em 0.5em;
   background-color: black;
   line-height: 1.5em;
   > a {
      display: inline-block;
      height: 100%;
   }
   nav {
      ul {
         margin: 0;
         padding: 0;
      }
      li {
         display: block;
         width: 50%;
         float: left;
         text-align: right;
         &:first-child {
            text-align: left;
         }
      }
   }
}

figure {
   display: inline-block;

   &.aside {
      position: absolute;
      top: 0;
      //left: 0;
      right: 0;
      display: block;
      max-width: 60%;
      margin: 0;
      overflow: visible;
      width: 100vh;
      height: 100%;
      z-index: 1;
      display: flex;
      align-items: center;
      justify-content: center;
   }

   > object, > svg {
      display: block;
      max-width: 100%;
      max-height: 100%;
      object-fit: contain;
   }
}

dl.predicates, aside.predicate, td.predicate {
   font-size: 80%;
}

td.predicate {
   vertical-align: top;
   display: table-cell;
}

aside.collection {
   display: none;
}

aside, td {
   &.predicate {
      display: block;
      background-color: black;
      border-style: solid;
      border-width: 0.05em;
      padding: 0.5em;
      margin-top: 0.5em;
      @include vendor(border-radius, 1em);

      &:first-child {
         margin-top: 0;
      }

      h3 {
         margin: 0 0 0.5em 0.25em;
      }

      ul {
         margin: 0;
         padding-left: 0.5em;
      }

      li {
         display: block;
         list-style-type: none;
         margin-left: 0.25em;
         margin-top: 0.5em;
         &:first-child {
            margin-top: 0;
         }
         a {
            box-sizing: border-box;
            display: block;
            width: 100%;
            height: 100%;
            padding: 0.2em 0.5em;
            &:hover {
               text-decoration: none;
            }
         }
      }

      &.link, &.concept {
         ul li a {
            display: inline-block;
            max-width: 80%;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
         }
      }
   }
}

dt {
   font-weight: bold;
}

dd {
   margin-left: 0.5em;
   padding: 0.2em;
   margin-bottom: 0.5em;
}

div.class-selector {
   display: inline-block;
   float: left;

   > button {
      display: block;
      margin: 0.5em 0;
      line-height: 1.5em;
      @include vendor(border-radius, 0.5em);
   }
}

*[property="rdfs:label"], h3.label {
   padding: 0.1em 0.3em;
   display: inline-block;
   @include vendor(border-radius, 0.4em);
}

hr.separator {
   border: none;
   margin: 1em;
}

/* inline stuff */

a {
   text-decoration: none;

   &:link {
      color: #cd9bce;
   }

   &:visited {
      color: #b280b2;
   }

   &:hover, &:active {
      color: #ddbcde;
      text-decoration: underline;
   }
}

object {
   &.hiveplot {
      display: block;
      width: 100%;
      height: 100%;

      &.baby {
         display: block;
         position: absolute;
         top: 0;
         right: 0;
         width: auto;
         height: 25%;
         transform: rotate(-45deg);

         &.other {
            top: unset;
            bottom: 0;
            width: auto;
            height: 25%;
            transform: rotate(45deg);
         }
      }
   }
}

span.date {
   position: absolute;
   bottom: 0;
   right: 5em;
   font-size: 66.6%;
   opacity: 0.3;
}

/* form stuff */

body[typeof~="skos:Concept"] {
    section.relations {
        top: 19em;
    }
    section.self {
        h1 {
            display: flex;
            height: initial;
            > form {
                width: 100%;
            }

            input {
                width: 100%;
            }
            button {
                flex: 1;
            }
        }
        > form {
            display: flex;

            textarea {
                font-size: 80%;
                border-style: solid;
                border-width: 0.1em;
                @include vendor(border-radius, 0.333em);
            }
            button {
                position: initial;
                top: initial;
                right: initial;
                flex: 1;
            }
        }

        aside.predicate {
            height: 5.5em;
            &.label {
                width: 46.5%;
                &.hidden {
                    right: 0;
                }
            }
            &.link {
                top: 15em;
                width: auto;
                left: 0;
                right: 0;
            }
        }
    }

    form#toggle-which {
        width: 100%;
        left: 0;
        text-align: center;
        label {
            display: inline-block;
            padding: 0 1em;
        }
    }
}

form {
   display: inherit;
   border-color: inherit;

   &#blank-page {
      margin: 5em auto;
      width: 70ex;
   }

   &#toggle-which {
      //padding: 0.25em;
      position: absolute;
      top: 1em;
      right: 0;
      width: 50%;
      height: 2em;
      //z-index: 2;

      label {
         //display: inline-block;
         display: block;
         //width: 40%;
         //margin: 0 2%;
         font-size: 80%;
         font-weight: bold;
         //text-align: center;
      }
   }
}

fieldset {
   border-style: inherit;
   border-width: inherit;
   margin: 0;
   padding: 0;

   &.relation {
      font-size: 75%;
      visibility: hidden;
      // display: none;
      opacity: 0;
      // float: left;
      // width: 33.33%;
      // height: 12em;
      // overflow: hidden;
      position: absolute;
      width: 11em;
      height: 13em;
      background-color: none !important;

      &.selected {
         // display: block;
         opacity: 1;
         visibility: visible;
      }

      &.skos {
         width: 100%;
         height: auto;
         visibility: visible;
         opacity: 1;
         left: 1em;

         h4, li {
            min-width: 8em;
            max-width: 10em;
         }
         h4, ul, li {
            margin: 0;
            display: inline-block;
         }

         &[rel~="skos:narrower"] {
            top: 5em;
         }
         &[rel~="skos:related"] {
            top: 7em;
         }
         &[rel~="skos:broader"] {
            top: 9em;
         }
      }

      input {
         margin: 0.125em;
         padding: 0;
         // vertical-align: middle;
      }

      legend {
         font-weight: bold;
      }

      ul {
         //padding: 0 0.5em 0 0.5em;
         padding: 0;
         list-style-type: none;
         margin: 0.6666em 0.8333em;
      }

      li {
         @include vendor(border-radius, 0.5em);
         margin-top: 1px;
         border-style: solid;
         border-width: 0.05em;
         padding: 0.125em;

         &:first-child {
            margin-top: 0;
         }
      }

      li > label {
         display: block;
      }
   }

   &.types {
      position: absolute;
      top: 4em;
      right: 0;
      width: 50%;
      margin: 0;
      font-weight: bold;

      ul {
         margin: 0;
         padding-left: 0;
         list-style-type: none;
      }
   }

   /*
   &.issue {
      border-top-left-radius: 0.5em;
      border-bottom-left-radius: 0.5em;
   }

   &.argument {
      border-top-right-radius: 0.5em;
      border-bottom-right-radius: 0.5em;
   }
   */

   .interaction {
      position: absolute;
      height: 2em;
      margin: auto;
      padding: 1em;
      left: 0;
      right: 0;
      bottom: 0;
      display: flex;

      button {
         width: 2.5em;
         flex: 0;
      }
   }

   &.edit-group {
      width: 100%;
      height: 100%;
   }
}

textarea {
   &.heading, &.description {
      border: none;
      color: inherit;
      font-family: inherit;
      font-size: inherit;
      font-weight: inherit;
      font-style: inherit;
      width: 100%;
      resize: none;
      overflow: visible;
      height: 5em;
      white-space: pre-wrap;
   }
}

input, select, option, textarea, button {
   background-color: transparent;
}

input[type="text"], input[type="submit"], input[type="reset"], select, button {
   font-family: inherit;
   font-size: inherit;
   font-weight: inherit;
   background-color: inherit;
   color: inherit;
   border-width: 1px;
   border-style: solid;
   border-radius: 0.25em;
}

input[type="submit"], input[type="reset"], input[type="checkbox"],
input[type="radio"], label, button {
   cursor: pointer;
}

input.new-value {
   padding-left: 0.25em;
}

select.target, input.new-value {
   min-width: 75%;
   //max-width: 32ex;
   flex: 1;
}

select.target {
   text-overflow: ellipsis;
   option {
      max-width: 70ex;
      overflow-x: hidden;
   }
}

option {
   padding: 0 0 0 1ex;
}

button, label {
   &:hover {
      cursor: pointer;
   }
   &[disabled] {
      cursor: auto;
   }
}

button {
   padding: 1pt 1ex;

   &[disabled] {
      color: #222;
   }

   &.disconnect {
      font-size: 75%;
      display: inline-block;
      float: right;
      margin: 0.2em 0.2em 0.5em 1em;
      padding: 0.25em;
      @include vendor(border-radius, 0.25em);
   }

   &.set-type {
      font-size: 75%;
      vertical-align: middle;
   }

   &.update {
      display: inline-block;
      width: 1.5em;
      padding: 0.25em;
      border-radius: 0.25em;
      position: absolute;
      top: 4em;
      right: 1.5em;
   }

   &#toggle-full-screen {
      display: none;
   }
}

/* palette stuff */

@each $prop in $PROPERTIES {
   $idx: str-index($prop, ":");
   $suf: str-slice($prop, $idx + 1);
   $uri: map-get($PREFIXES, str-slice($prop, 1, $idx - 1));
   $pal: map-get($PALETTE, $prop);

   //@debug $prop, $pal;

   *[about="#{$uri}#{$suf}"], *[about="#{$prop}"] {
      background-color: nth($pal, 8);
      color: nth($pal, 3);
   }

   li[about="#{$prop}"] {
      background-color: nth($pal, 7);
      border-color: nth($pal, 4);
      color: nth($pal, 2);

      &.selected {
         background-color: nth($pal, 8);
         border-color: nth($pal, 5);
         color: nth($pal, 3);
      }
   }

   aside[rel~="#{$prop}"].predicate {
      background-color: nth($pal, 7) !important;
      border-color: nth($pal, 4) !important;
   }
}

@each $class, $fieldset in $FIELDSETS {
   $idx: str-index($class, ":");
   $suf: str-slice($class, $idx + 1);
   $uri: map-get($PREFIXES, str-slice($class, 1, $idx - 1));
   $pal: map-get($PALETTE, $class);

   // body[typeof~="#{$class}"] main {
   //   @include vendor(box-shadow, inset 0px 0px 40px nth($pal, 1));
   // }

   body[typeof~="#{$class}"] main, // fieldset.#{$fieldset},
      body[typeof~="#{$class}"] aside.predicate {
      background-color: nth($pal, 2);
      border-color: nth($pal, 5);
      color: nth($pal, 5);
   }

   body[typeof~="#{$class}"] {

      article {
         background-color: nth($pal, 3);
      }
      footer {
         background-color: nth($pal, 1);
      }
      section {
         &.relations, &.edit {
            background-color: nth($pal, 2);
            border-color: nth($pal, 2);
         }
      }
   }

   button[value="#{$class}"].set-type,
      [typeof~="#{$class}"] button, li[typeof~="#{$class}"] button {
      color: nth($pal, 2);
      border-color: nth($pal, 3);
      background-color: nth($pal, 4);
      &:hover {
         background-color: nth($pal, 5);
      }
   }

   button[value="#{$class}"][disabled] {
      color: nth($pal, 3);
      border-color: nth($pal, 3);
      background-color: nth($pal, 1);
   }

   li, dfn, em, strong, span {
      &[typeof~="#{$class}"], &[about="#{$class}"], &[about="#{$uri}#{$suf}"] {

         background-color: nth($pal, 5);
         border-color: nth($pal, 4);
         color: nth($pal, 2);
         a {
            color: inherit;

            &:hover {
            //background-color: nth($pal, 6);
               color: nth($pal, 3);
            }
         }
         &:hover, &.subject {
            background-color: nth($pal, 6);
            border-color: nth($pal, 5);
         }
      }
   }

   form[about="#{$class}"] {
      background-color: nth($pal, 4);
      color: nth($pal, 2);

      select.target, input.new-value {
         border-color: nth($pal, 2);
         background-color: nth($pal, 5);
      }
      button {
         border-color: nth($pal, 2);
         background-color: nth($pal, 4);
         color: nth($pal, 2);

         &:hover {
            background-color: nth($pal, 6);
            border-color: nth($pal, 5);
            color: nth($pal, 4);
         }
      }
   }
}

/* idiosyncratic layout stuff */

section {
   &.self {
      position: absolute;
      top: 1em;
      left: 1em;
      right: 1em;

      form.types {
         position: absolute;
         width: 2.25em;

         button {
            @include vendor(border-radius, 0.25em);
            height: 1.5em;
         }
      }

      h1 {
         margin: 0;
         height: 4em;
         font-size: 133.3%;
      }

      form.description {
         position: absolute;
         top: 0;
         left: 2.25em;
         right: 0.25em;

         textarea {
            box-sizing: border-box;
            padding-right: 2.5em;
            height: 4em;
         }

         button {
            position: absolute;
            top: 0;
            right: 0;
            height: 4em;
            width: 2em;
            @include vendor(border-radius, 0.25em);
         }
      }

      aside.predicate {
         height: 6em;
         position: absolute;

         &.concept {
            top: 7.5em;
            left: 0;
            width: 40%;
         }

         ul {
            overflow-y: auto;
            height: 3.33em;
         }

         &.link {
            top: 7.5em;
            right: 0;
            width: 53.5%;
         }

         li {
            input, select {
               width: 78%;
               display: block;
               float: left;
               height: 100%;
               line-height: inherit;
            }

            button {
               width: 18%;
               display: block;
               float: right;
               height: 100%;
               line-height: inherit;
               margin: 0;
            }
         }
      }
   }

   &.relations {
      position: absolute;
      top: 13.5em;
      bottom: 14.5em;
      overflow-y: auto;
      left: 1em;
      right: 1em;
      border-style: solid;
      border-width: 0.25em;
      @include vendor(border-radius, 0.8em);

      li {
         @include vendor(border-radius, 0.375em);
         border-style: solid;
         border-width: 0.05em;
      }
   }

   &.edit {
      position: absolute;
      overflow: hidden;
      bottom: 1em;
      left: 1em;
      right: 1em;
      height: 12.5em;
      border-style: solid;
      border-width: 0.25em;
      @include vendor(border-radius, 0.8em);

      > form {
         width: 100%;
         height: 100%;
      }
   }

   &.index {
       //position: absolute;
       //top: 0;
       width: 50%;
       max-height: 8em;
       //height: 66.66%;
       box-sizing: border-box;
       padding: 0 1em;

      h1 {
         text-align: center;
      }

      figure {
         width: 100%;
         margin: auto;
         height: 70%;
         display: block;

         > object {
            display: block;
            height: 100%;
            margin: auto;
         }
      }

      // &.ibis {
      //     left: 0;
      // }

      // &.skos {
      //     right: 0;
      // }

      &.list {
          width: 100%;
          // height: 33.33%;
          // top: unset;
          // bottom: 0;
          display: flex;
          flex-wrap: wrap;
          align-items: stretch;
          min-height: 3em;
          max-height: calc(33.3% - 8em);

          > section {
              height: 100%;
              //float: left;
              width: 25%;
              //height: 100%;
              //bottom: 0;
              box-sizing: border-box;
              font-size: 75%;

              > h2 {
                  text-align: center;
              }
          }
      }

      ul {
         overflow-y: auto;
         padding-left: 1.5em;
         padding-right: 0.5em;
         // width: 100%;
         max-height: calc(100% - 4em);
      }

      li {
         text-align: left;
         hyphens: auto;
      }
   }
}

// D3 SVG STUFF

@each $class in $CLASSES {
    $pal: map-get($PALETTE, $class);
    a[typeof~="#{$class}"] {
        > circle {
            fill: nth($pal, 5);
            &.target {
                fill: transparent;
            }
        }
        &:hover, &.subject {
            > circle {
                fill: nth($pal, 6);
                &.target {
                    fill: transparent;
                }
            }
        }
    }
}

@each $prop in $PROPERTIES {
    $i: str-index($prop, ":");
    $prop-id: "#{str-slice($prop, 1, $i - 1)}.#{str-slice($prop, $i + 1)}";
    $pal: map-get($PALETTE, $prop);

    line[rel~="#{$prop}"], path[rel~="#{$prop}"] {
        fill: none;
        stroke: nth($pal, 7);
        color: nth($pal, 7);
        //marker-end: url(#arrowhead);
        marker-start: url(##{$prop-id}) !important;
        &.subject {
            stroke: nth($pal, 8);
            color: nth($pal, 8);
            marker-start: url(##{$prop-id}.subject) !important;
        }
        &.neighbour {
            //stroke-width: 3;
        }
    }

    polygon[about~="#{$prop}"] {
        opacity: 1 !important;
        fill: nth($pal, 7);
        //fill: currentColor;
        //stroke: none;
        &.subject {
            fill: nth($pal, 8);
        }
    }
}

// XXX THIS IS NOT THE BEST BUT IT WILL WORK FOR NOW LOL
@each $class, $pair in $FADE {
    $classes: nth($pair, 1);
    $props: nth($pair, 2);

    body[typeof~="#{$class}"] {
        svg {
            g.edge {
                @each $p in $props {
                    line, path {
                        &[rel~="#{$p}"], &[rev~="#{$p}"] {
                            opacity: 0.5;
                        }
                    }
                }
            }
            g.node {
                @each $c in $classes {
                    a[typeof~="#{$c}"] circle {
                        opacity: 0.5;
                    }
                }
            }
        }
    }
}

circle#backdrop {
    fill: black;
    opacity: 0.05;
}

marker polygon {
    fill: currentColor;
    stroke: none;
    opacity: 1;
}
